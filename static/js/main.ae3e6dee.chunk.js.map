{"version":3,"sources":["Header/Header.js","config/axios.js","InfoBox/InfoBox.js","Table/Table.js","Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","variant","src","style","backgroundColor","width","alt","Button","startIcon","onClick","alert","instance","axios","create","baseURL","InfoBox","props","backgroundcolor","marginTop","icon","text","textTimeHr","textTimeMm","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","colorWhite","margins","Table","calculateTimeDiff","date11","date21","date1","Date","parseInt","date2","difference","getTime","hoursDifference","Math","floor","minutesDifference","data","map","info","index","Accordion","defaultExpanded","key","AccordionSummary","expandIcon","aria-controls","id","Typography","unix","format","startDay","endDay","tripLists","reduce","result","item","totalKm","marginLeft","e","i","tripExpenses","length","amount","calculateExp","AccordionDetails","tableData","startPointNode","startTripDate","endPointNode","endTripDate","driverName","display","flexDirection","justifyContent","gpsDistance","toFixed","startODOMeter","endODOMeter","size","rootCalender","Main","useState","toDate","settoDate","fromDate","setfromDate","userdata","setuserdata","loading","setloading","useEffect","getData","to","from","body","post","then","res","setTimeout","error","console","log","active","spinner","selected","onChange","datum","parse","Grid","container","md","vehicleNo","totalTrips","totalTime","totalTripTime","totalExpences","otherExpenses","tripDetails","App","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ae3e6dee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <div variant=\"h6\" className={classes.title}>\r\n                        <img src=\"https://www.watsooexpress.com/img/Logo.png\" style={{backgroundColor:'#fff'}} width=\"10%\" alt=\"logo\"></img>\r\n                    </div>\r\n                    <Button variant=\"contained\" startIcon={<PowerSettingsNewIcon />} onClick={() => { alert('Logout') }}>Logout</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    //baseURL\r\n    baseURL: 'http://staging.watsoo.com:8080/watsoo-amazon-api/'\r\n})\r\n\r\nexport default instance;","import React from 'react'\r\nimport './InfoBox.css'\r\n\r\nfunction InfoBox(props) {\r\n    return (\r\n        <div className='containerBox' style={{ backgroundColor: props.backgroundcolor }}>\r\n            <span style={{ marginTop: '4px', marginRight: '5px' }}>{props.icon}</span>\r\n            <span>\r\n                {props.text} {props.textTimeHr ? props.textTimeHr : null} {props.textTimeHr ? 'Hrs' : null} {props.textTimeMm ? props.textTimeMm : null} {props.textTimeMm ? 'mm' : null}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React from 'react';\r\nimport './Table.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport Button from '@material-ui/core/Button';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '60%',\r\n        flexShrink: 0,\r\n        color: '#fff',\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: '#fff',\r\n    },\r\n    colorWhite: {\r\n        color: '#fff',\r\n    },\r\n    margins: {\r\n        marginRight: '10px'\r\n    }\r\n}));\r\n\r\nexport default function Table(props) {\r\n    const classes = useStyles();\r\n    // console.log('Tale', props.data);\r\n\r\n\r\n    const calculateExp = (e) => {\r\n        // console.log(e);\r\n        for (let i = 0; i < 1; i++) {\r\n            if (e[i].tripExpenses.length) {\r\n                return e[i].tripExpenses.reduce((result, item) => result + item.amount, 0)\r\n            } else {\r\n                return 0\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const calculateTimeDiff = (date11, date21) => {\r\n        let date1 = new Date(parseInt(date21))\r\n        let date2 = new Date(parseInt(date11))\r\n        var difference = date1.getTime() - date2.getTime();\r\n\r\n        var hoursDifference = Math.floor(difference / 1000 / 60 / 60);\r\n        difference -= hoursDifference * 1000 * 60 * 60\r\n\r\n        var minutesDifference = Math.floor(difference / 1000 / 60);\r\n        difference -= minutesDifference * 1000 * 60\r\n\r\n        return ((hoursDifference) + ' Hrs ' + (minutesDifference) + ' Minutes')\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {props.data && props.data.map((info, index) => {\r\n                return (\r\n                    <Accordion defaultExpanded={true} key={index}>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon className={classes.colorWhite} />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                        >\r\n                            <Typography className={classes.heading}>Date: <Moment unix format=\"DD/MM/YYYY\">{parseInt(info?.startDay / 1000)}</Moment> at <Moment unix format=\"LT\">{parseInt(info?.startDay / 1000)}</Moment> -  <Moment unix format=\"DD-MM-YYYY\">{parseInt(info?.endDay / 1000)}</Moment> at <Moment unix format=\"LT\">{parseInt(info?.endDay / 1000)}</Moment> ({calculateTimeDiff(info?.startDay, info?.endDay)})\r\n                            </Typography>\r\n                            <Typography className={classes.secondaryHeading}>\r\n                                Total KM: {info.tripLists.reduce((result, item) => result + parseInt(item.totalKm), 0)} KM\r\n                                <span style={{ color: '#dae01e', marginLeft: '10px' }}>Total Expense: {calculateExp(info.tripLists)}</span>\r\n\r\n\r\n                                {/* Total Expense: {info.tripLists && info.tripLists.map((e) => {\r\n                                        return e.tripExpenses.reduce((result, item) => result + item.amount, 0)\r\n                                    }\r\n                                    )\r\n                                } */}\r\n                            </Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <table>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Trip Starts(Node) Trip Ends(Node)</th>\r\n                                        <th>Driver Name</th>\r\n                                        <th>Trip Expenses</th>\r\n                                        <th>Trip Km</th>\r\n                                        <th>Trip GPS Km</th>\r\n                                        <th>Trip Time</th>\r\n                                        <th>Odometer Reading</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                    {info.tripLists && info.tripLists.map((tableData, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{tableData.startPointNode}(<Moment unix format=\"LT\">{parseInt(tableData?.startTripDate / 1000)}</Moment>) <span style={{ marginTop: '4px', marginLeft: '5px', color: '#00bddc' }}><ForwardIcon fontSize={'inherit'} /></span> {tableData.endPointNode}(<Moment unix format=\"LT\">{parseInt(tableData?.endTripDate / 1000)}</Moment>)</td>\r\n                                                <td>{tableData.driverName}</td>\r\n                                                <td >\r\n                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                                                        <div>Rs. {tableData.tripExpenses[0]?.amount || 0}\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <span style={{ marginTop: '4px', color: '#00bddc' }}><InfoIcon fontSize={'inherit'} /></span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{tableData.totalKm} Km</td>\r\n                                                <td>{tableData.gpsDistance.toFixed(2)} Km</td>\r\n                                                <td>{calculateTimeDiff(tableData?.startTripDate, tableData?.endTripDate)}</td>\r\n                                                <td>\r\n                                                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n\r\n                                                        {tableData.startODOMeter || 'N/A'} <span style={{ marginTop: '4px', marginLeft: '5px', color: '#00bddc' }}><ForwardIcon fontSize={'inherit'} /></span>  {tableData.endODOMeter || 'N/A'}\r\n                                                    </div>\r\n\r\n                                                </td>\r\n                                                <td style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                    <div>\r\n                                                        <Button className={classes.margins} size={'small'} variant=\"contained\" color=\"primary\" onClick={() => { alert('Movement Report') }}>Movement Report\r\n                                                          </Button>\r\n                                                        <Button variant=\"contained\" color=\"primary\" size={'small'} onClick={() => { alert('Stoppage Report') }}>Stoppage Report\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n\r\n                            </table>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport './Main.css'\r\nimport axios from '../config/axios'\r\nimport DatePicker from \"react-datepicker\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\n\r\nimport InfoBox from '../InfoBox/InfoBox'\r\nimport Table from '../Table/Table'\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rootCalender: {\r\n        position: 'absolute', \r\n        marginTop: '4px', \r\n        marginLeft: '-20px', \r\n        color: '#00bddc'\r\n    },\r\n})); \r\n\r\n\r\n\r\nfunction Main() {\r\n    const classes = useStyles();\r\n    const [toDate, settoDate] = useState(1593613371659)\r\n    const [fromDate, setfromDate] = useState(1577888571659)\r\n    const [userdata, setuserdata] = useState({})\r\n    const [loading, setloading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getData(1593613371659, 1577888571659)\r\n        return () => {\r\n            // cleanup\r\n        }\r\n    }, [])\r\n\r\n\r\n    const getData = (to, from) => {\r\n        setloading(true)\r\n        const body = {\r\n            \"clientId\": 10,\r\n            \"dataRecord\": {\r\n                \"userRoleId\": 4,\r\n                \"userRoleName\": \"COMPANY\",\r\n                \"userId\": 10\r\n            },\r\n            \"fromDate\": from,\r\n            \"toDate\": to,\r\n            \"tripId\": 36\r\n        }\r\n        axios.post('/trip-controller-web/v1/vehicle/wise/summary/36', body)\r\n            .then((res) => {\r\n                setuserdata(res.data.data)\r\n                setTimeout(() => {\r\n                    setloading(false)\r\n                }, 500);\r\n\r\n            }, (error) => {\r\n                console.log(error);\r\n                setloading(false)\r\n            })\r\n    }\r\n    // 1578406971\r\n    const handleChangeToDate = (e) => {\r\n        var datum = Date.parse(e);\r\n        console.log(datum)\r\n        settoDate(datum);\r\n    }\r\n\r\n    const handleChangeFromDate = (e) => {\r\n        var datum = Date.parse(e);\r\n        console.log(datum)\r\n        setfromDate(datum)\r\n    }\r\n\r\n\r\n\r\n    // console.log(userdata);\r\n\r\n    return (\r\n        <LoadingOverlay\r\n            active={loading}\r\n            spinner\r\n            text='Loading...'\r\n        >\r\n\r\n            <div className=\"container\">\r\n                <div className=\"headerBar\">\r\n                    <div>\r\n                        <Typography variant='h6'>\r\n                            Trip Summary\r\n                    </Typography>\r\n                        <Typography variant='caption'>\r\n                            <span className=\"subLink\">Dashboard</span> / Trip Summary\r\n                    </Typography>\r\n                    </div>\r\n                    <div className=\"headerBar\">\r\n                        <div className=\"mr\">\r\n                            From\r\n                    </div>\r\n                        <div className=\"mr\">\r\n                            <DatePicker\r\n                                style={{ position: 'relative' }}\r\n                                selected={fromDate}\r\n                                onChange={handleChangeFromDate}\r\n                            />\r\n                            <CalendarTodayIcon fontSize={'inherit'} className={classes.rootCalender} />\r\n                        </div>\r\n                        <div className=\"mr\">\r\n                            To\r\n                    </div>\r\n                        <div className=\"mr\">\r\n                            <DatePicker\r\n                                selected={toDate}\r\n                                onChange={handleChangeToDate}\r\n                                style={{ position: 'relative' }}\r\n                            />\r\n                             <CalendarTodayIcon fontSize={'inherit'} className={classes.rootCalender} />\r\n                        </div>\r\n                        <div className=\"mr\">\r\n                            <Button variant=\"contained\" color=\"primary\" size={'small'} onClick={(e) => { getData(toDate, fromDate) }}><SearchIcon fontSize={'inherit'} /></Button>\r\n                        </div>\r\n                        <div className=\"mr\">\r\n                            <Button variant=\"outlined\" color=\"primary\" size={'small'} startIcon={<SystemUpdateAltIcon />} onClick={() => { alert('Export') }}>Export</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"infoBoxes\">\r\n                    <Grid container >\r\n                        <Grid item md={8}>\r\n                            <Grid container item spacing={3}>\r\n                                <Grid item md={4} >\r\n                                    <InfoBox\r\n                                        backgroundcolor={'#29bdc2'}\r\n                                        icon={<LocalShippingIcon />}\r\n                                        text={userdata?.vehicleNo} />\r\n                                </Grid>\r\n                                <Grid item md={4}>\r\n                                    <InfoBox\r\n                                        backgroundcolor={'#c2993b'}\r\n                                        icon={<LocalShippingIcon />}\r\n                                        text={`Total Trips: ${userdata?.totalTrips}`}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item md={4}>\r\n                                    <InfoBox backgroundcolor={'#005a93'}\r\n                                        icon={<SpeedIcon />}\r\n                                        text={`Total KM: ${userdata?.totalKm} KM`}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container item spacing={3}>\r\n                                <Grid item md={4}>\r\n                                    <InfoBox backgroundcolor={'#00a74b'}\r\n                                        icon={<WatchLaterIcon />}\r\n                                        text={'Total Time:'}\r\n                                        textTimeHr={<Moment unix format=\"hh\">{parseInt(userdata?.totalTime)}</Moment>}\r\n                                        textTimeMm={<Moment unix format=\"mm\">{parseInt(userdata?.totalTime)}</Moment>}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item md={4}>\r\n                                    <InfoBox backgroundcolor={'#962297'}\r\n                                        icon={<WatchLaterIcon />}\r\n                                        text={'Total Time: '}\r\n                                        textTimeHr={<Moment unix format=\"hh\">{parseInt(userdata?.totalTripTime)}</Moment>}\r\n                                        textTimeMm={<Moment unix format=\"mm\">{parseInt(userdata?.totalTripTime)}</Moment>}\r\n                                    />\r\n\r\n                                </Grid>\r\n                                <Grid item md={4}>\r\n                                    <InfoBox backgroundcolor={'#6a5718'}\r\n                                        icon={<AccountBalanceWalletIcon />}\r\n                                        text={`Total Exp : ${userdata?.totalExpences}`}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item md={4}>\r\n                            <div className='blackBoxContainer'>\r\n                                <div className='blackBox'>\r\n                                    <span style={{ marginTop: '4px', marginRight: '5px' }}><AccountBalanceWalletIcon /></span> <span>Other Exp: Rs {userdata?.otherExpenses}</span><span style={{ marginTop: '4px', marginLeft: '5px' }}><ForwardIcon fontSize={'inherit'} /></span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <div className=\"tableContainer\">\r\n                    <Table data={userdata?.tripDetails} />\r\n                </div>\r\n            </div >\r\n        </LoadingOverlay>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\nimport './App.css';\n\nimport Header from './Header/Header'\nimport Main from './Main/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}